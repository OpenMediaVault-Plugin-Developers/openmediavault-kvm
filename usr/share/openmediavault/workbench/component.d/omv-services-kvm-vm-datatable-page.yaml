version: "1.0"
type: component
data:
  name: omv-services-kvm-vm-datatable-page
  type: datatablePage
  config:
    autoReload: 10000
    hasSearchField: true
    stateId: 95b0cc44-6998-11eb-9bad-97c000edb30b
    rowId: vmname
    sorters:
      - dir: asc
        prop: vmname
    store:
      proxy:
        service: Kvm
        get:
          method: getVmList
    columns:
      - name: _("AutoStart")
        prop: autostart
        flexGrow: 1
        sortable: true
        cellTemplateName: checkIcon
      - name: _("Name")
        prop: vmname
        flexGrow: 1
        sortable: true
      - name: _("Type")
        prop: virttype
        flexGrow: 1
        sortable: true
      - name: _("State")
        prop: state
        flexGrow: 1
        sortable: true
      - name: _("vCPU")
        prop: cpu
        flexGrow: 1
        sortable: true
      - name: _("Memory")
        prop: mem
        flexGrow: 1
        sortable: true
        cellTemplateName: binaryUnit
      - name: _("Disk(s)")
        prop: disks
        flexGrow: 1
        sortable: true
      - name: _("Snapshots")
        prop: snaps
        flexGrow: 1
        sortable: true
      - name: _("Spice port")
        prop: spiceport
        flexGrow: 1
        sortable: true
      - name: _("VNC port")
        prop: vncport
        flexGrow: 1
        sortable: true
      - name: _("spice-html5 URL")
        prop: spicehtml5url
        flexGrow: 1
        sortable: true
      - name: _("noVNC URL")
        prop: novncurl
        flexGrow: 1
        sortable: true
      - name: _("noVNC port")
        prop: novncport
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("spice-html5 port")
        prop: spicehtml5port
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Terminal Link")
        prop: termurl
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Arch")
        prop: arch
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Notes")
        prop: notes
        flexGrow: 2
        sortable: false
    actions:
      - type: iconButton
        icon: mdi:desktop-classic
        tooltip: _("Add new VM")
        execute:
          type: url
          url: /services/kvm/vm/add
      - type: iconButton
        icon: mdi:train-car-container
        tooltip: _("Add new container")
        execute:
          type: url
          url: /services/kvm/vm/lxc
      - type: menu
        icon: mdi:harddisk
        tooltip: _("Hard disk")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: and
              arg0:
                operator: ne
                arg0:
                  prop: state
                arg1: "running"
              arg1:
                operator: ne
                arg0:
                  prop: virttype
                arg1: "lxc"
        actions:
          - text: _("Add disk")
            icon: mdi:harddisk-plus
            execute:
              type: formDialog
              formDialog:
                title: _('Add disk ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: voldisk
                    label: _('Volume')
                    textField: name
                    valueField: path
                    value: 'Create new disk'
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumes
                          params:
                            optical: false
                            opticalNone: false
                  - type: select
                    name: volpool
                    label: _('Pool')
                    textField: name
                    valueField: name
                    value: ''
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumeratePools
                    modifiers:
                      - type: visible
                        constraint:
                          operator: eq
                          arg0:
                            prop: voldisk
                          arg1: "Create new disk"
                  - type: container
                    modifiers:
                      - type: visible
                        constraint:
                          operator: eq
                          arg0:
                            prop: voldisk
                          arg1: "Create new disk"
                    fields:
                      - type: textInput
                        name: volname
                        label: _("Name")
                        value: ""
                        modifiers:
                          - type: visible
                            constraint:
                              operator: eq
                              arg0:
                                prop: voldisk
                              arg1: "Create new disk"
                      - type: select
                        name: volformat
                        label: _("Format")
                        value: "qcow2"
                        store:
                          data:
                            - ["qcow2", _("qcow2")]
                            - ["raw", _("raw")]
                        modifiers:
                          - type: visible
                            constraint:
                              operator: eq
                              arg0:
                                prop: voldisk
                              arg1: "Create new disk"
                  - type: container
                    modifiers:
                      - type: visible
                        constraint:
                          operator: eq
                          arg0:
                            prop: voldisk
                          arg1: "Create new disk"
                    fields:
                      - type: numberInput
                        name: volsize
                        label: _("Size")
                        value: 1
                        validators:
                          min: 1
                          max: 99999
                          patternType: integer
                          required: true
                        modifiers:
                          - type: visible
                            constraint:
                              operator: eq
                              arg0:
                                prop: voldisk
                              arg1: "Create new disk"
                      - type: select
                        name: volunit
                        label: _("Unit")
                        value: "G"
                        store:
                          data:
                            - ["M", _("Megabytes")]
                            - ["G", _("Gigabytes")]
                            - ["T", _("Terabytes")]
                        modifiers:
                          - type: visible
                            constraint:
                              operator: eq
                              arg0:
                                prop: voldisk
                              arg1: "Create new disk"
                  - type: select
                    name: volbus
                    label: _("Bus")
                    value: "virtio"
                    store:
                      data:
                        - ["virtio", _("virtio")]
                        - ["scsi", _("scsi")]
                        - ["sata", _("sata")]
                        - ["ide", _("ide")]
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addDisk
                        progressMessage: _("Adding a disk ...")
                        successNotification: _("Disk has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Add host disk")
            icon: mdi:harddisk-plus
            execute:
              type: formDialog
              formDialog:
                title: _('Add host disk ...')
                fields:
                  - type: hint
                    hintType: info
                    text: _("Be very careful not to passthrough a device being used by the host operating system!<br/>Using /dev/sd* is known to be less reliable because they can change between reboots.<br/>It is recommended to use /dev/disk/by-id device names.")
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: voldisk
                    label: _('Disk')
                    textField: description
                    valueField: device
                    value: 'Select host disk'
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateHostDisk
                  - type: select
                    name: volbus
                    label: _("Bus")
                    value: "virtio"
                    store:
                      data:
                        - ["virtio", _("virtio")]
                        - ["scsi", _("scsi")]
                        - ["sata", _("sata")]
                        - ["ide", _("ide")]
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addHostDisk
                        progressMessage: _("Adding a host disk ...")
                        successNotification: _("Host disk has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Remove disk")
            icon: mdi:harddisk-remove
            execute:
              type: formDialog
              formDialog:
                title: _('Remove disk ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: disk
                    label: _('Disk')
                    textField: description
                    valueField: path
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumesByVm
                          params:
                            optical: false
                            vmname: '{{ _selected[0].vmname }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removeDisk
                        progressMessage: _("Removing disk ...")
                        successNotification: _("Disk has been removed.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
      - type: menu
        icon: mdi:disc
        tooltip: _("Optical")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: virttype
              arg1: "lxc"
        actions:
          - text: _("Add disc")
            icon: mdi:plus-circle-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Add optical disc ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: voliso
                    label: _('Optical disc')
                    textField: name
                    valueField: path
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumes
                          params:
                            optical: true
                            opticalNone: false
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addOptical
                        progressMessage: _("Adding optical disc ...")
                        successNotification: _("Optical disc has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Add host drive")
            icon: mdi:plus-circle
            execute:
              type: formDialog
              formDialog:
                title: _('Add host optical drive ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: device
                    label: _('Optical drive')
                    textField: description
                    valueField: device
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateHostOptical
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addHostOptical
                        progressMessage: _("Adding host drive ...")
                        successNotification: _("Host drive has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Change disc")
            icon: mdi:pencil-circle-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Change optical disc ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: disk
                    label: _('Optical drive')
                    textField: description
                    valueField: devname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumesByVm
                          params:
                            optical: true
                            vmname: '{{ _selected[0].vmname }}'
                  - type: select
                    name: voliso
                    label: _('Optical disc')
                    textField: name
                    valueField: path
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumes
                          params:
                            optical: true
                            opticalNone: false
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Change')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: changeDisc
                        progressMessage: _("Changing optical disc ...")
                        successNotification: _("Optical disc has been changed.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
          - text: _("Eject disc")
            icon: mdi:eject-circle-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Eject optical disc ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: disk
                    label: _('Optical disc')
                    textField: description
                    valueField: devname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumesByVm
                          params:
                            optical: true
                            vmname: '{{ _selected[0].vmname }}'
                  - type: checkbox
                    name: force
                    value: false
                    label: _("Force eject")
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Eject')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: ejectDisc
                        progressMessage: _("Ejecting optical disc ...")
                        successNotification: _("Optical disc has been ejected.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
          - text: _("Remove disc")
            icon: mdi:minus-circle-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Remove optical disc ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: disk
                    label: _('Optical disc')
                    textField: description
                    valueField: devname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVolumesByVm
                          params:
                            optical: true
                            vmname: '{{ _selected[0].vmname }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removeDisk
                        progressMessage: _("Removing optical disc ...")
                        successNotification: _("Optical disc has been removed.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
      - type: menu
        icon: mdi:folder-swap-outline
        tooltip: _("Passthrough Filesystem")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: state
              arg1: "running"
        actions:
          - text: _("Add passthrough")
            icon: mdi:file-upload-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Add passthrough filesystem ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: textInput
                    name: src
                    label: _('Source')
                    value: ''
                  - type: textInput
                    name: tgt
                    label: _('Mount tag')
                    value: ''
                    hint: _('Arbitrary string that is used inside the guest to identify the shared file system to be mounted. It does not have to correspond to the desired mount point in the guest.')
                    modifiers:
                      - type: visible
                        constraint:
                          operator: ne
                          arg0:
                            prop: virttype
                          arg1: "lxc"
                  - type: textInput
                    name: tgt2
                    label: _('Mount point')
                    value: ''
                    modifiers:
                      - type: visible
                        constraint:
                          operator: eq
                          arg0:
                            prop: virttype
                          arg1: "lxc"
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addFsPass
                        progressMessage: _("Adding passthrough filesystem ...")
                        successNotification: _("Passthrough filesystem has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Remove passthrough")
            icon: mdi:file-download-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Remove passthrough filesystem ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: srctgt
                    label: _('Passthrough')
                    textField: description
                    valueField: srctgt
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateFsPassByVm
                          params:
                            vmname: '{{ _selected[0].vmname }}'
                            virttype: '{{ _selected[0].virttype }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removeFsPass
                        progressMessage: _("Removing passthrough filesystem ...")
                        successNotification: _("Passthrough filesystem has been removed.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
      - type: menu
        icon: mdi:lan
        tooltip: _("Network")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("Add network")
            icon: mdi:plus-network-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Add network adapter ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: model
                    label: _("Model")
                    value: "virtio"
                    store:
                      data:
                        - ["virtio", _("virtio")]
                        - ["e1000", _("e1000")]
                        - ["vmxnet3", _("vmxnet3")]
                        - ["rtl8139", _("rtl8139")]
                        - ["ne2k_pci", _("ne2k_pci")]
                        - ["pcnet", _("pcnet")]
                        - ["bridge", _("bridge")]
                  - type: select
                    name: bridge
                    label: _('Bridge')
                    textField: bridge
                    valueField: bridge
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateBridges
                    modifiers:
                      - type: hidden
                        constraint:
                          operator: ne
                          arg0:
                            prop: model
                          arg1: "bridge"
                  - type: select
                    name: network
                    label: _('Network')
                    textField: netname
                    valueField: netname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateNetworks
                    modifiers:
                      - type: hidden
                        constraint:
                          operator: eq
                          arg0:
                            prop: model
                          arg1: "bridge"
                  - type: textInput
                    name: macaddress
                    label: _("MAC address")
                    hint: _("Leave blank for random address.")
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addVmNic
                        progressMessage: _("Adding network adapter ...")
                        successNotification: _("Network adapter has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Remove network")
            icon: mdi:minus-network-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Remove network adapter ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: network
                    label: _('Network')
                    textField: description
                    valueField: mac
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateVmNic
                          params:
                            vmname: '{{ _selected[0].vmname }}'
                            virttype: '{{ _selected[0].virttype }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removeVmNic
                        progressMessage: _("Removing network adapter ...")
                        successNotification: _("Network adapter has been removed.")
                    successUrl: /services/kvm/vm
      - type: menu
        icon: mdi:expansion-card-variant
        tooltip: _("PCI")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: virttype
              arg1: "lxc"
            - operator: eq
              arg0:
                prop: state
              arg1: "shutoff"
        actions:
          - text: _("Add PCI")
            icon: mdi:plus-box-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Add PCI device ...')
                fields:
                  - type: hint
                    hintType: info
                    text: "This is an experimental feature.<br/>Be very careful not to passthrough a device being used by the host operating system.<br/>IOMMU and other settings must be enabled outside of the plugin.<br/><a href='https://wiki.debian.org/VGAPassthrough' target='_blank'>Helpful link #1</a><br/><a href='https://www.server-world.info/en/note?os=Debian_12&p=kvm&f=13' target='_blank'>Helpful link #2</a><br/><a href='https://wiki.gentoo.org/wiki/GPU_passthrough_with_libvirt_qemu_kvm' target='_blank'>Helpful link #3</a>"
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: device
                    label: _('PCI device')
                    textField: description
                    valueField: device
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumeratePciByHost
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addPci
                        progressMessage: _("Passing through PCI device ...")
                        successNotification: _("PCI device has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Remove PCI")
            icon: mdi:minus-box-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Remove PCI device ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: device
                    label: _('PCI device')
                    textField: description
                    valueField: device
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumeratePciByVm
                          params:
                            vmname: '{{ _selected[0].vmname }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removePci
                        progressMessage: _("Removing PCI device ...")
                        successNotification: _("PCI device has been removed.")
                    successUrl: /services/kvm/vm
      - type: menu
        icon: mdi:usb
        tooltip: _("USB")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: virttype
              arg1: "lxc"
        actions:
          - text: _("Add USB")
            icon: mdi:plus-box-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Add USB device ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: device
                    label: _('USB device')
                    textField: description
                    valueField: device
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateUsbByHost
                  - type: checkbox
                    name: byaddress
                    value: false
                    label: _("Passthrough by address instead of using vendor and product IDs")
                    hint: _("Warning! Address can change after VM reboot breaking the passthrough!<br />Useful when the host system has two or more devices with duplicate vendor and product IDs.")
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Add')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: addUsb
                        progressMessage: _("Adding USB device ...")
                        successNotification: _("USB device has been added.")
                    successUrl: /services/kvm/vm
          - text: _("Remove USB")
            icon: mdi:minus-box-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Remove USB device ...')
                fields:
                  - type: textInput
                    name: vmname
                    label: _('VM Name')
                    value: '{{ _selected[0].vmname }}'
                    readonly: true
                  - type: select
                    name: device
                    label: _('USB device')
                    textField: description
                    valueField: device
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateUsbByVm
                          params:
                            vmname: '{{ _selected[0].vmname }}'
                  - type: hidden
                    name: state
                    value: '{{ _selected[0].state }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Remove')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: removeUsb
                        progressMessage: _("Removing USB device ...")
                        successNotification: _("USB device has been removed.")
                    successUrl: /services/kvm/vm
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
      - type: iconButton
        icon: mdi:information-outline
        tooltip: _("Details")
        execute:
          type: url
          url: "/services/kvm/vm/details/{{ _selected[0].vmname }}"
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: virttype
              arg1: "lxc"
      - type: menu
        icon: mdi:power
        tooltip: _("State")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("Start")
            icon: mdi:play-circle-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "poweron"
                progressMessage: _("Starting ...")
                successNotification: _("Started.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: ne
                  arg0:
                    prop: state
                  arg1: "running"
          - text: _("Reboot")
            icon: mdi:restart
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "reboot"
                progressMessage: _("Rebooting ...")
                successNotification: _("Rebooted.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "running"
          - text: _("Stop")
            icon: mdi:stop-circle-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "poweroff"
                  hostport: "{{ _selected[0].novncport | int }}"
                  hostport2: "{{ _selected[0].spicehtml5port | int }}"
                  vncport: "{{ _selected[0].vncport | int }}"
                  spiceport: "{{ _selected[0].spiceport | int }}"
                progressMessage: _("Stopping ...")
                successNotification: _("Stopped.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "running"
          - text: _("Reset")
            icon: mdi:cached
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "reset"
                progressMessage: _("Resetting ...")
                successNotification: _("Reset.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "running"
          - text: _("Force")
            icon: mdi:arrow-down
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "force"
                  hostport: "{{ _selected[0].novncport | int }}"
                  hostport2: "{{ _selected[0].spicehtml5port | int }}"
                  vncport: "{{ _selected[0].vncport | int }}"
                  spiceport: "{{ _selected[0].spiceport | int }}"
                progressMessage: _("Forcing down ...")
                successNotification: _("Forced down.")
                task: false
          - text: _("Pause")
            icon: mdi:pause-circle-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "pause"
                progressMessage: _("Pausing ...")
                successNotification: _("Paused.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "running"
          - text: _("Resume")
            icon: mdi:play-box-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "resume"
                progressMessage: _("Resuming ...")
                successNotification: _("Resumed.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "paused"
      - type: menu
        icon: delete
        tooltip: _("Delete")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: eq
              arg0:
                prop: state
              arg1: "shutoff"
            - operator: le
              arg0:
                prop: snaps
              arg1: 0
        actions:
          - text: _("Delete")
            icon: mdi:text-box-minus-outline
            confirmationDialogConfig:
              template: confirmation-danger
              message: _("Are you sure you want to delete?")
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "undefine"
                  hostport: "{{ _selected[0].novncport | int }}"
                  hostport2: "{{ _selected[0].spicehtml5port | int }}"
                  vncport: "{{ _selected[0].vncport | int }}"
                  spiceport: "{{ _selected[0].spiceport | int }}"
                progressMessage: _("Deleting ...")
                successNotification: _("Deleted.")
                task: false
          - text: _("Delete + storage")
            icon: mdi:delete-sweep-outline
            confirmationDialogConfig:
              template: confirmation-critical
              message: _("Are you sure you want to delete?")
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "undefineplus"
                  hostport: "{{ _selected[0].novncport | int }}"
                  hostport2: "{{ _selected[0].spicehtml5port | int }}"
                  vncport: "{{ _selected[0].vncport | int }}"
                  spiceport: "{{ _selected[0].spiceport | int }}"
                progressMessage: _("Deleting ...")
                successNotification: _("Deleted.")
                task: false
      - type: menu
        icon: mdi:clock-start
        tooltip: _("AutoStart")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("Enable")
            icon: mdi:arrow-up-bold-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "autostartenable"
                progressMessage: _("Enabling autostart ...")
                successNotification: _("Autostart has been enabled.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: falsy
                  arg0:
                    prop: autostart
          - text: _("Disable")
            icon: mdi:arrow-down-bold-outline
            execute:
              type: request
              request:
                service: Kvm
                method: doCommand
                params:
                  name: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "autostartdisable"
                progressMessage: _("Disabling autostart ...")
                successNotification: _("Autostart has been disabled.")
                task: false
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: truthy
                  arg0:
                    prop: autostart
      - type: menu
        icon: mdi:content-copy
        tooltip: _("Snapshots")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("Create")
            icon: mdi:file-cog-outline
            execute:
              type: request
              request:
                service: Kvm
                method: addSnapshot
                params:
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                progressMessage: _("Creating snapshot ...")
                successNotification: _("Snapshot has been created.")
                task: false
          - text: _("Revert")
            icon: mdi:file-undo
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: gt
                  arg0:
                    prop: snaps
                  arg1: 0
            execute:
              type: formDialog
              formDialog:
                title: _('Revert to snapshot')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: select
                    name: snapname
                    label: _("Snapshot")
                    placeholder: _("Select a snapshot ...")
                    textField: description
                    valueField: snapname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateSnapshots
                          params:
                            vmname: "{{ _selected[0].vmname }}"
                            virttype: "{{ _selected[0].virttype }}"
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Revert')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: revertSnapshot
                        progressMessage: _("Reverting to snapshot ...")
                        successNotification: _("Snapshot has been reverted.")
          - text: _("Delete")
            icon: mdi:delete-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: gt
                  arg0:
                    prop: snaps
                  arg1: 0
            execute:
              type: formDialog
              formDialog:
                title: _('Delete snapshot')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: select
                    name: snapname
                    label: _("Snapshot")
                    placeholder: _("Select a snapshot ...")
                    textField: description
                    valueField: snapname
                    store:
                      proxy:
                        service: Kvm
                        get:
                          method: enumerateSnapshots
                          params:
                            vmname: "{{ _selected[0].vmname }}"
                            virttype: "{{ _selected[0].virttype }}"
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Delete')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: deleteSnapshot
                        progressMessage: _("Deleting snapshot ...")
                        successNotification: _("Snapshot has been deleted.")
      - type: menu
        icon: mdi:remote-desktop
        tooltip: _("Console")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: ne
              arg0:
                prop: virttype
              arg1: "lxc"
        actions:
          - text: _("Start")
            icon: mdi:television-play
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: novncurl
                  arg1: "n/a"
            execute:
              type: formDialog
              formDialog:
                title: _('Create consoles')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: numberInput
                    name: vncport
                    label: _("VNC port")
                    value: "{{ _selected[0].vncport }}"
                    readonly: true
                  - type: numberInput
                    name: hostport
                    label: _("Host VNC port")
                    value: 8081
                    validators:
                      min: 1024
                      max: 65536
                      patternType: port
                      required: true
                  - type: numberInput
                    name: spiceport
                    label: _("Spice port")
                    value: "{{ _selected[0].spiceport }}"
                    readonly: true
                  - type: numberInput
                    name: hostport2
                    label: _("Host spice port")
                    value: 8091
                    validators:
                      min: 1024
                      max: 65536
                      patternType: port
                      required: true
                  - type: hidden
                    name: command
                    value: "start"
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Start')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: doWeb
                        progressMessage: _("Starting consoles ...")
                        successNotification: _("Consoles have been started.")
          - text: _("Stop")
            icon: mdi:television-stop
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: ne
                  arg0:
                    prop: novncurl
                  arg1: "n/a"
            execute:
              type: request
              request:
                service: Kvm
                method: doWeb
                params:
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                  command: "stop"
                  hostport: "{{ _selected[0].novncport | int }}"
                  hostport2: "{{ _selected[0].spicehtml5port | int }}"
                  vncport: "{{ _selected[0].vncport | int }}"
                  spiceport: "{{ _selected[0].spiceport | int }}"
                progressMessage: _("Stopping consoles ...")
                successNotification: _("Consoles have been stopped.")
                task: false
          - text: _("Add Spice")
            icon: mdi:plus-circle-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: falsy
                    arg0:
                      prop: spiceexists
            execute:
              type: request
              request:
                service: Kvm
                method: addVnc
                params:
                  spice: true
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                progressMessage: _("Adding spice viewer ...")
                successNotification: _("Spice viewer has been added.")
                task: false
          - text: _("Remove Spice")
            icon: mdi:minus-circle-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: truthy
                    arg0:
                      prop: spiceexists
            execute:
              type: request
              request:
                service: Kvm
                method: removeVnc
                params:
                  spice: true
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                progressMessage: _("Removing spice viewer ...")
                successNotification: _("Spice viewer has been removed.")
                task: false
          - text: _("Add VNC")
            icon: mdi:plus-circle-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: falsy
                    arg0:
                      prop: vncexists
            execute:
              type: request
              request:
                service: Kvm
                method: addVnc
                params:
                  spice: false
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                progressMessage: _("Adding VNC viewer ...")
                successNotification: _("VNC viewer has been added.")
                task: false
          - text: _("Remove VNC")
            icon: mdi:minus-circle-outline
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: truthy
                    arg0:
                      prop: vncexists
            execute:
              type: request
              request:
                service: Kvm
                method: removeVnc
                params:
                  spice: false
                  vmname: "{{ _selected[0].vmname }}"
                  virttype: "{{ _selected[0].virttype }}"
                progressMessage: _("Removing VNC viewer ...")
                successNotification: _("VNC viewer has been removed.")
                task: false
      - type: menu
        icon: mdi:cog-outline
        tooltip: _("Advanced")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("Clone")
            icon: mdi:content-duplicate
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: ne
                    arg0:
                      prop: virttype
                    arg1: "lxc"
            execute:
              type: formDialog
              formDialog:
                title: _('Clone VM')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: textInput
                    name: newname
                    label: _("New name")
                    value: ""
                    validators:
                      required: true
                      custom:
                        - constraint:
                            operator: ne
                            arg0:
                              prop: vmname
                            arg1:
                              prop: newname
                          errorData: _('A different name must be specified.')
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Clone')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: cloneVm
                        progressMessage: _("Cloning ...")
                        successNotification: _("Cloning complete.")
          - text: _("Linked Clone")
            icon: mdi:content-duplicate
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: and
                  arg0:
                    operator: eq
                    arg0:
                      prop: state
                    arg1: "shutoff"
                  arg1:
                    operator: ne
                    arg0:
                      prop: virttype
                    arg1: "lxc"
            execute:
              type: formDialog
              formDialog:
                title: _('Create Linked Clone VM')
                fields:
                  - type: textInput
                    name: source
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: textInput
                    name: clone
                    label: _("Clone name")
                    value: ""
                    validators:
                      required: true
                buttons:
                  submit:
                    text: _('Clone')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: createLinkedClone
                        progressMessage: _("Creating linked clone ...")
                        successNotification: _("Linked clone complete.")
          - text: _("Edit Notes")
            icon: mdi:note-edit-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Edit notes')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: textarea
                    name: notes
                    label: _("Notes")
                    value: "{{ _selected[0].notes | replace('<br/>', '\n') }}"
                    rows: 5
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Save')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: setNotes
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
          - text: _("Edit XML")
            icon: mdi:xml
            execute:
              type: url
              url: "/services/kvm/vmxml/{{ _selected[0].vmname }}/{{ _selected[0].virttype }}"
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: snaps
                  arg1: 0
          - text: _("Change vCPU")
            icon: mdi:memory
            execute:
              type: formDialog
              formDialog:
                title: _('Change vCPU')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: numberInput
                    name: vcpu
                    label: _("CPUs")
                    value: "{{ _selected[0].cpu }}"
                    validators:
                      min: 1
                      max: 32
                      patternType: integer
                      required: true
                  - type: hidden
                    name: memory
                    value: -1
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Change')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: doChangeCpuMemory
                        progressMessage: _("Changing number of CPUs ...")
                        successNotification: _("CPU count has been changed.")
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "shutoff"
          - text: _("Change memory")
            icon: mdi:rectangle-outline
            execute:
              type: formDialog
              formDialog:
                title: _('Change memory')
                fields:
                  - type: textInput
                    name: vmname
                    label: _("Source VM")
                    value: "{{ _selected[0].vmname }}"
                    readonly: true
                  - type: numberInput
                    name: memory
                    label: _("Memory")
                    value: "{{ _selected[0].mem | int / 1024 / 1024 }}"
                    validators:
                      min: 1
                      max: 99999
                      patternType: integer
                      required: true
                  - type: select
                    name: memoryunit
                    label: _("Unit")
                    value: "MiB"
                    store:
                      data:
                        - ["MiB", _("MiB")]
                        - ["GiB", _("GiB")]
                  - type: hidden
                    name: vcpu
                    value: -1
                  - type: hidden
                    name: virttype
                    value: '{{ _selected[0].virttype }}'
                    readonly: true
                buttons:
                  submit:
                    text: _('Change')
                    execute:
                      type: request
                      request:
                        service: Kvm
                        method: doChangeCpuMemory
                        progressMessage: _("Changing memory amount ...")
                        successNotification: _("Memory amount has been changed.")
            enabledConstraints:
              minSelected: 1
              maxSelected: 1
              constraint:
                - operator: eq
                  arg0:
                    prop: state
                  arg1: "shutoff"
